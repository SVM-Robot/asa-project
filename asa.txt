-----
PPDL
------

-------------------------------------------------------------------------
PDDL TODO:
-------------------------------------------------------------------------


CHECK COORDINATE!!



- passing the map (rn it's passed artificially)  					--> should be FIXED
- check initialize_map (blocked, other things, etc)

- i think rn the map in initialize_map gets recreated all the time. --> should be FIXED









-------------------------------------------------------------------------
after myAgent.loop() I've put const pathPlanning = new PathPlanning(map);

in class BindMove:
        //pathPlanning.updateTarget(me.x, me.y, x, y);
        //pathPlanning.planAndExecute();

-------------------------------------------------------------------------

https://github.com/unitn-ASA/Deliveroo.js


Play on the cloud: https://deliveroojs.onrender.com/
https://deliveroojs2.onrender.com/ https://deliveroojs3.onrender.com/

git clone https://github.com/unitn-ASA/Deliveroo.js.git
npm install
node index.js level_1 
node index.js challenge_1_copy


(or level_2 , any other config file in ./levels)
npm run dev to load environment variables from .env file:

npm install @unitn-asa/deliveroo-js-client

git clone https://github.com/unitn-ASA/DeliverooAgent.js



-- for new folder/new project:

- empty folder,
npm init
	
npm install @unitn-asa/pddl-client@0.0.37

node filename.js

	
	
var myMap = 
[[2, 3, 2], 	// '0' are blocked tiles (empty or not_tile)
[0, 3, 0], 		// '1' are walkable spawning tiles
[1, 3, 1] ] 	// '2' are delivery tiles
				// '3' are walkable non-spawning tiles
				
				
'0' are blocked tiles (empty or not_tile), '1' are walkable spawning tiles, '2' are delivery tiles, '3' are walkable non-spawning tiles
				
				
				
http://rtibdi.disi.unitn.it:8080
				
PLANNER:
				
npm install @unitn-asa/pddl-client@0.0.37

https://solver.planning.domains/
https://github.com/AI-Planning/planutils

Dear all,

here the correct steps to run the planner locally.

As specified in planning-as-a-service/server/Makefile, it is necessary first to build a local planutils:latest (FROM aiplanning/planutils:latest) using the server/Makefile and the run docker compose:

docker build -t planutils:latest .
docker-compose up -d --build 

I was missing the "make" step




sì usi la libreria quella di robol di pddl, poi devi creare il tuo beliefset con il problema ecc.

Perché invece che usare l'online solver usi quello che installi con docker
Perché con la libreria fai una richiesta all'online solver, ma puoi sostituire quel link con il localhost:5001, che è la cosa che installi con docker


RL:
...
npm run train





